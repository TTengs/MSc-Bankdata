Transcribed Interview from Manager.

The Speaker 1 is me and Speaker 2 is the manager.

Speaker 1   0:12
Ja før at jeg starter så hvad hedder det?
Er du har du al ret til ligesom at forblive anonym i igennem hele mit projekt, hvis du ønsker det. Jeg tror faktisk.
På en vis måde kan det godt ende med, at du bare bliver det ligegyldigt hvad Det er måske, men ikke dit navn ikke rigtig skal bruges, men specielt også hvis du ønsker det, skal du også bare sige det.

Speaker 2   0:45
Ja, Det er fint nok.

Speaker 1   0:47
Ja Jeg har nogle spørgsmål. Nu, dem stiller jeg dig at du har frit mulighed til at svare på det du har lyst til at svare om. Du skal bare gå så langt ud i en tangent som du har lyst til, så skal jeg nok stoppe dig hvis det bliver for meget og så kan vi måske diskutere nogle svar du har, hvis Det er Jeg har brug for noget uddybelse til det og jeg skal bruge interviewet i sig selv her til at prøve at undersøge hele det her problem lidt dybere.
Og bruge nogle af jeres erfaringer til det.
Ja har du nogle spørgsmål?

Speaker 2   1:20
Nej, men du må gerne sende specialet og måske kommer og fortælle om det, når du er færdig engang ovre i Vores team.

Speaker 1   1:28
Det tænker jeg, at jeg bliver bedt om, at rigtig mange af dem Jeg har snakket, men indtil videre. Men det skal i hvert fald gøre.

Speaker 2   1:36
Det lyder godt.

Speaker 1   1:37
Jeg tænker her til at starte med, om du måske vil fortælle lidt om dig.

Speaker 2   1:42
Ja jeg hedder Nicklas og jeg sidder som senior manager for 2 teams i området securities and custody det det ene time hedder DAC (?) domæne architecture og består af 4 domæne arkitekter og en konsulent.
Hvor vi er med til at definere og udvikle arkitekturen på tværs af egentlig 2 områder SEC og MTT så begge 2 inden for for kapitalmarkedet så har jeg også et team der hedder Technology (Tech) og der har vi det primærte fokus at være et enabler time i forhold til platform 2.0 prøver at fjerne de road blocks der gør Det kan være svært at udvikle på den platform også være med til at “up skill” både dem der ikke har arbejdet på platformen før, men også de udvikler der arbejder på platformen til at blive.
Endnu skarpere og dygtigere, og så hjælper vi også med at implementere nogle af de tvær-organisatoriske ændringer, der kommer på platformen. For eksempel kom der jo HELM 3, og der har været en spring boot opgradering og så videre og så videre. Så prøver vi at hjælpe med at “for tygge” det lidt og får nogle gange. Udfører vi arbejdet for dem og og ellers så prøver vi gerne at lave nogle guides og og ellers stiller Vores ekspertise til rådighed for for de andre teams, der har brug for det.

Speaker 1   2:55
Ja.
Hvor lang tid har du været ansat i Bankdata, hvis du kan komme med et estimat? Måske bare.

Speaker 2   3:04
Ja Det kan jeg da starte 1. april 2016 og så startede jeg som leder 1. Maj 2018.

Speaker 1   3:12
OK.
Hvor lang tid i den tid? Så har du siddet i team der også beskæftiger sig med med mainframe og COBOL.

Speaker 2   3:24
Det har jeg lige fra at starte både først og sad som forretningskonsulent i team, der kun havde COBOL for løsningen og så efterfølgende så så alle de teams Jeg har haft ansvaret for at have haft mere eller mindre COBOL. Faktisk lige med undtagelse af den position jeg sidder i nu. Fordi der har vi ikke ansvaret for nogle produkter, hvor der indgår, hvad kan man sige? COBOL udvikling.

Speaker 1   3:25
OK.
Ja.

Speaker 2   3:48
Øhm

Speaker 1   3:55
Ja, du kan bare fortsætte.

Speaker 2   3:56
Ja nej nej så fordi vi Vi har Sådan to “enabler teams”, så Vi har ikke noget produktansvaret Vi er med til at understøtte og gøre de andre teams rundt omkring os bedre og dygtigere.

Speaker 1   4:06
Perfekt.
Har du nogen tidligere erfaringer fra før bankdata, hvor du har arbejdet et sted og der også har beskæftiget sig med, eller hvor du også har været manager/leder?

Speaker 2   4:20
Ja, jeg havde et værtshus inde i Århus i 5 år.
Vi havde en 30 unge mennesker som samme aldersgruppe, som du er nu,  ansat.

Speaker 1   4:25
Okay.
Ja.
Hyggeligt.

Speaker 2   4:32
Ja.

Speaker 1   4:35
Ja for at gå over til måske lidt mere om det her med at arbejde med cobol også hvilken forbindelse vil du sige? Måske er det Sådan dine arbejdsopgaver.
Bliver brugt sammen med det her med mainframe cobol.

Speaker 2   4:50
Jamen hele den her ud af mainframe arbejde og og projekt Vi er i gang i på tværs af bankdata, der der synes jeg at især med arkitekt teams spiller en rigtig stor rolle i. Det er en stor driver i det så lige nu der prøver vi at hjælpe.
De teams vi understøtter med at få et overblik over.
Hvordan deres kodekvalitet er efter?
Hvad kan man sige nogle standardiserede målemetoder, så derfor så må man kigge på hvor mange linier koder har hver team ansvaret for, hvor tæt koblet er Vores systemer, hvor mange services understøtter hvert enkelt team i dag. Så har vi trods alt set på bankdata kigget meget på de her STF’er systemer tilhørsforhold, hvor at Vi har et system der har et eller andet tre-bogstavs forkortelse. Og så tænker vi ikke så meget over hvad er det for et produkt eller service det system tilbyder?
Vi har bare med tid nogle gange proppet alt muligt ind i det, ikke om eventuelt i konto eller Sådan noget. De har jo også Sådan en 20-25 services der inde under deres STF, så det giver ikke rigtig mening at snakke om det som Sådan et isoleret produkt, fordi Det er i virkeligheden en paraply af produkter, så Det er vi med til at prøve at skabe et overblik over for de enkelte team. Hvordan kan vi egentlig “un-bundle” den STF i noget der giver mere sigende og en af de teams vi understøtter. Det tror jeg de har 17 services, som vi Sådan formelt set siger, men Der er bare en enkelt STF og det det skal vi være med til at skabe det overblik.
Og så skal vi så finde ud af.
Det er meget via noget domæne storytelling og Sådan lidt den domain driven design tankegang hvordan kan vi så finde ud af hvilket moduler der hænger sammen til hvilke services? Hvad er det for nogle flows der kører igennem Vores systemer? Hvor har vi måske et dubletter, og hvor har vi nogle nogle moduler, nogle programmer der bliver kaldt rigtig meget på tværs det. Det var for eksempel nogle steder skal vi nok udstille det som et offentligt modul eller som REST API eller ja, Det er jo så op til teamet at finde ud af hvordan de vil gøre det, men hjælpe dem med at øge deres bevidsthed omkring.
Deres produkter, og det service er de sidder med, fordi du set på på på bankdata den måde Vi har udviklet meget på har været, at Vi har lavet et program eller ændring til et program. Og så har vi selvfølgelig testet dokumenteret kastet det over hegnet, smidt det produktion, og så er der nogle der har kørt i 30 år fint nok og så andre de kører ikke så godt, så må man så prøve at kigge lidt på det igen. Det er ikke ikke ikke altid været lige god til arbejde som holistisk omkring det at at eje et forretningsmæssigt produkt.

Speaker 1   7:19
Okay.
Perfekt.
Hvad er din ligesom at holdning til det her at at arbejde med mainframe og cobol nu nævnte du også for at i også har nogle spring boot eller et platform 2.0 i hvert fald opgaver. Men ser du for eksempel det her med mainframe og cobol eller som at være noget stabilt eller noget? Du ser Sådan mere udfordringer i det her med vedligeholdelse eller måske noget tredje.

Speaker 2   7:47
Næ altså Jeg synes Det er mega stabilt. Jeg tror ikke Der er mange software, sprog og softwaresystemer Der er lavet siden man begynder at kode rigtig i 60’erne der har kørt så lang tid og så stabilt som som COBOL har performer rigtig stærkt grunden til vi arbejder med ud af mainframe tankegang er ikke så meget, fordi vi synes at det dårlige sprog eller ikke udføre opgaven. Det vi kan se Der er udfordringer, Det er Vi har noget vendor locking i forhold til. Det er jo nærmest kun IBM der har en en mainframe platform, så Det er klart når man binder sig så hårdt på en leverandør Der er.
Faktisk ikke findes noget alternativ til markedet det. Det kan godt være lidt farligt, især når Det er en stor vigtig del af Vores infrastruktur, så har vi i stigende grad problemer med at rekruttere folk, der synes Det er spændende at arbejde med, og Det er svært, generelt set at få hjælp ude på nettet, altså de unge mennesker, de googler sig til svar og eller bruger chat botter, og nu kommer der endnu mere AI ind i de er bare ikke trænet til at at arbejde med mainframe, fordi der der findes ikke det der community.
Som der gør for eksempel omkring spring boot eller REST eller alle de andre forskellige frameworks og Cloud løsninger med at gøre så det. Det bliver bare bliver mere og mere isoleret fra resten af omverdenen og og og det. Det har nogle … regler der heller ikke den samme agilitet i platformen, fordi de har lukket platform i forhold til hvis vi bruger ja.
Vores platform 2.0 eller på et tidspunkt cloud, hvis vi, hvis Vi skal ud i det.

Speaker 1   9:16
Ja.
Har du, nu nævnte du for noget erfaring med at arbejde på en bar? Har du ellers noget tidligere erfaring med at arbejde med mainframe eller cobol?

Speaker 2   9:28
Nej, Det er det første gang jeg startede på på bankdata.

Speaker 1   9:32
Okay, nu nævnte du så det her med at rekruttere folk.
Har du været med til det? Altså Sådan erfaringer i være med i delen af at prøve at rekruttere og ansætte folk med henblik på, ligesom at de her COBOL og/eller mainframe.
Hvad hedder det?
Ja kompetencer de skal have, men også alle de andre værktøjer om Det er.
Ja man bruger på mainframe i form af batch og.

Speaker 2   10:00
Der er altid masser af folk 20-30 personer eller Sådan tror jeg så.

Speaker 1   10:05
Som som i ligesom Sådan kan interviewe til Sådan nogle stillinger.
Eller hvad mener du?

Speaker 2   10:10
Ja, men siden jeg blev leder så og både nogen som skulle kode COBOL mainframe og nogen som skal på platform 2.0.

Speaker 1   10:18
OK.

Speaker 2   10:19
Nå, så får jeg lidt begge dele.

Speaker 1   10:22
Ja.
Er der noget du ser ofte som Sådan nogle trends med de typer af folk også? Det er Sådan ser der søger de job som for eksempel at komme ind på mainframe og cobol.

Speaker 2   10:40
Ja Det er jo typisk nogle med lidt længere erfaring. Det er ikke mange under.
40-45 som.
Som som bevidst søger Sådan nogle stillinger. Nogle af de søger det.
Fordi at de er Sådan lidt åbne. De er måske nyuddannede og lidt ligeglade med hvad Det er for et kodesprog man sidder med og og frisk nok på at prøve det, men man kan sige dem der søger lidt mere bevidst efter noget der der der har næsten kun nogle hvor de er 45.
Så Det er klart Det er bestemt demografisk gruppe, vi kan ramme, og den gruppe bliver bare ældre og ældre får hvert år der går.

Speaker 1   11:16
Okay.
Hvor ofte vil du være nødsaget til også at tage stillingen til, hvis der kommer opgaver ind, som har noget med batch processering at gøre? Er det Sådan?
Aldrig eller dagligt ugentligt. Sprint basis eller.

Speaker 2   11:42
Ja altså vi prøver jo at gå væk fra Sådan batch tankegangen og mere over til en online tankegang i det vi laver.
Altså hvad så du tænker at Vi har nogle opgaver hvor vi sidder og løser noget som man nok traditionelt set vil kalde en batch. 
Tilgang til det.

Speaker 1   12:01
Men nu når du siger online her, hvad mener du så med det?

Speaker 2   12:04
Jamen at batch processering. Det er at vi samler til bunke, så siger vi laver en hel masse ting og.
Det vil vi gerne prøve og væk fra. Det vil sige vi laver det “on the fly” vi laver det online, det vil sige at.
Det sker en ændring i Vores system, så skal det gerne afspejle.
Så skal jeg jo resten af Vores system også gerne afspejle denne ændring i stedet for at vente på at klokken bliver 2 om natten eller 3 om natten, eller hvornår man nu har sat de her “batch flows” til at køre. Men men Det er jo traditionelt Det er Sådan mainframe, fordi Det er i hvert fald Det er fundamentet, det starter ud med. Det er jo batch processering, så Vi har selvfølgelig stadigvæk masser af det på Bankdata til at sige, Det er da noget vi.
Vi er stadigvæk kigger ind i. Ja hvor er det lidt måske stadigvæk nogle af de opgaver Vi har, hvor vi på en eller anden måde er ramt af det

Speaker 1   12:49
Hvad hvis jeg måske i stedet for at spørge Sådan hvilke problemstillinger ser du måske oftere? Så når Det er, at der bliver stillet en opgave, som måske har noget med batch’en at gøre.

Speaker 2   13:01
Den og den skal igen tak, hvad siger du?.

Speaker 1   13:05
Det er måske ved at spørgsmålet kunne være Sådan, hvilke problemstillinger i ofte?
Eller du er i hvert fald ofte ser, når i så ender med at have nogle opgaver, som har noget med batchen at gøre.

Speaker 2   13:17
Jamen vi sidder faktisk laver et udtræk nu til et nyt integration til et hvad hedder det correction system (?) ved at lave og de skal bruge en masse data. Vi har liggende på mainframe og så skal de have det smidt op i deres eget system og der kører vi som Sådan en batch proces en gang om dagen, hvor Vi er nødt til at trække 2 millioner kontooplysninger ud i stedet for at kunne lave noget eventbaseret. Det vil sige kun tage de oplysninger ud, når der var nogle ændringer. For eksempel bliver nødt til at kigge hele tabellen igennem, som det ser ud lige nu, så så jeg tænker da i hvert fald en af de helt store udfordringer, Vi har ved batchprocessering.
At den der.
Change of states at den ligger kun et system og ikke afspejler alle andre systemer.

Speaker 1   14:02
Er der nogen ting som ved den her nuværende løsning, som kører på mainframe om det både er for batch programmerne eller jeg tænker også de her online løsninger. Du snakker realtids transaktioner, at det også er fra mainframe siden.
Du snakker list om dem?

Speaker 2   14:18
Ja ja men altså mainframe understøtter fint online Det er jo Det har man jo en CICS løsning til at til at omsætte.

Speaker 1   14:20
Ja.
Lige præcis er der nogle ting som Sådan det hele, den løsning du godt kunne tænke dig at se egentlig forbedret.

Speaker 2   14:31
Ja vi kunne godt tænke os at få indopereret en event platform på bankdata.
Vi har snakket om i hvert fald i Vores område giver det mening? Jeg tror egentlig, at jeg snakkede med en udvikling i går, at at at at at verden Der er per definition næsten transaktionel og og det der med at have Sådan en en state på et fast tidspunkt. Det er en det, Det er et levn fra dengang man ikke havde andre muligheder og ikke vidste hvad Det var, fordi Vi skal jo have.
De her ændringer, der sker. Det er jo det, Vi er interesserede i at vide. Vi er ikke interesseret i at vide af stater var klokken 15.07 i går vi interesseret i at vide, hvilke ændringer der har været, så vi hele tiden kan reetablere, hvis Det er nødvendigt, men også at vi hele tiden ved at vi er up to date og alle systemer har det samme billede af hvilket state vi i så.
For eksempel ikke, hvis det sidder med en kontooversigt. Jamen, hvorfor skulle jeg kunne vide, hvad rentetilskrivninger er med det samme eller hvad mit afkast Der er på de aktier jeg har investeret i? Med det samme i stedet for at vi Sådan genberegner det, når vi spørger om så skal det jo bare være klar hver gang der sker noget.

Speaker 1   15:38
Ja.
Det giver god mening.
Har du nogle er det noget i kender til en Sådan løsning der kunne have den forbedring Sådan nu er jeg på stående fod eller er det måske mere noget i gerne ligesom ville have?
Ressourcer til at kunne kigge ind i, hvordan man kunne lave den forbedring.

Speaker 2   16:00
Ja til bedste spørgsmål, til begge spørgsmål, altså vi vil rigtig gerne kigge ind og kigger også lidt ind i, hvad der findes ude på markedet og snakker med med andre områder i bankdata omkring det. Men Vi har ikke noget hvad kan man sige first hand experience?
Med at arbejde med det selv, men Det er jo klart det kunne være noget som Kafka eller ActiveMQ eller RabbitMQ som som og som vi lige ser, så er det nok lige Kafka vi vil starte ud med, fordi de er nok markedsledende, som det ser ud så egentlig i hvert fald Sådan for enterprise niveau som og den størrelse som som Vi har.

Speaker 1   16:35
Yes.
Er du selv, ville du selv sige, at du er interesseret i at bankdata skulle Sådan ud af mainframe med henblik på i hvert fald cobol, batch og bare ja processering af data på den måde.

Speaker 2   16:52
Ja meget.

Speaker 1   16:54
Hvorfor?

Speaker 2   16:56
Jamen igen Jeg kan jo se som som leder, at Jeg har det overordnede ansvar for for lige nu har jeg så ikke noget system vi har ansvar for, men men.
At, Der er en kæmpe risiko i, at vi ikke kan få rekrutteret folk, der ved nok omkring det arbejde på mainframe, og at vi det gør, at vi.
Hvad siger Vores strategi bliver mere og mere et håb på, at tingene de kører ordentligt, men hvis vi virkelig rammer ind i nogle udfordringer, men så måske når vi kigger 5 år 8 år 10 år frem, så har vi ikke nogle folk, som kan finde ud af det, hvis det begynder at blive rigtige tough, og Det er svært at lære folk op i det her, fordi du kan ikke finde information Sådan lige ved hånden online og og noget af det Det er det, Det er virkelig anderledes end det man ellers lærer på skolen, eller sidder selv og arbejder med.
Ude i cloud, hvis man sidder og kører containers fra sin egen computer eller hvordan man nu ønsker at udvikle det. Og så har vi også den der agilitet i forhold til til en ny løsning i brug om det så er nye komponenter eller Det er nye integrationer til tredjeparter. Der er det bare meget lettere hvis man er på en platform der der minder lidt mere om om hinanden end når man skal ned på mainframe.

Speaker 1   18:07
Har du nogle?
Nu nævnte du selv Kafka før som et alternativ til mainframe hørte jeg det i hvert fald som var det også det du mente det eller er der andre du selv også tænker at de her alternativer?

Speaker 2   18:19
Nej, jeg tænkte Kafka mere som en altså som en event platform, og den kunne jo i teorien godt spille sammen med mainframe. Det kunne jo være mainframe har det MQ system, som jo egentlig også kan bruges som et event baseret system. Det er så bare igen har vi lidt der med det lidt med et lukket system, end noget af det der ellers findes på markedet, så vil vi laver en del løsninger på platform 2 0, og det synes vi egentlig fungerer rigtig fint. Vi kan jo så godt nok også se, når vi gerne vil rekruttere nogle af de dygtige folk, så vil de jo gerne ud i cloud og arbejde.
Det er det de er vant til. Det giver jo andre muligheder, og vi kan også se, at at især for nogle af de yngre udvikler, så betyder det også lidt mere og holde sin markedsværdi vedlige. Og det gør det selvfølgelig primært ved at arbejde med nogle teknologier, som også er skaber værdi for andre virksomheder, hvorimod vi sidder og lærer nogle folk meget op i COBOL. Mainframe virker kan også forstå hvis der sidder en eller 2 rundt omkring og tænker det vil jeg gerne det lyder spændende, men Det kan jo så kun bruge på bankdata, så hvis jeg gør det og bliver dybt specialiseret og der lige pludselig ikke brug for mig, hvad skal jeg så lave?
Hvor Kan man så komme hen, og hvis du er god til cloud, så skal du nok kunne finde et job alle mulige andre steder.

Speaker 1   19:30
Ja.
Ja vil du selv sige, at Det er realistisk og.
Kunne ses Sådan ud af mainframe på den måde.
Set fra bankdata synspunkt, hvor du måske har nogle nogle kendskab til, hvordan Sådan nogle ting bliver prioriteret og.
Fundet ressourcer til.

Speaker 2   20:04
Det var jo.
Det var et spørgsmål med et spørgsmål på.

Speaker 1   20:09
Ja.

Speaker 2   20:09
Så hvis vi vil starte, hvis vi cuttede med det første spørgsmål, om jeg tænker, at Det er realistisk, at vi kan komme ud, tænker jeg ja, Det har andre banker gjort, og de har gjort det på under 5 år og internationalt set. Der har vi ikke en særligt stor organisation, vi sidder under 1000 mand, altså, Det er jo ikke engang en division ved ved ved nogle af de store banker og så videre. Plus vil vi ikke være de første i markedet, der gør det her. Vi har ikke noget unikt på bankdata, så selvfølgelig vil vi kunne gøre det. Det er jo spørgsmålet om om tid og penge.
Så havde du så et del-spørgsmål, så i forhold til det prioriteringer og den måde vi ellers arbejder på på bankdata, og der vil jeg sige der. Det kommer bare ikke til at ske, hvis vi fortsætter, som vi gør lige nu, fordi Der er nogle ting, som vi bliver nødt til at.
Og ensartet beslutte Der er nogle rigtig store …, kan man blive nødt til at tage for at vi virkelig kan flytte os ud nogle af de ting, vi altså Sådan som event platform. Det er Sådan en lille ting. Det få millioner kroner det koster, men men hvis vi virkelig skal flytte os ud, så bliver vi nødt til at identificere de kernesystemer, Vi har, og ligesom der hvor Vi har nogle road blocks og lad os nu sige kontosystem, der bliver brugt, rigtig rigtig mange steder. På et eller andet tidspunkt skal vi have flyttet hele det system ud, og det kompleks, der også ligger rundt omkring det.
Og Jeg tror på, Det er en opgave, som jo procentmæssig minder om Sådan konvertering. Altså Vi skal have nogle centrale projekt teams, som bliver nødt til at arbejde ekstremt struktureret med, hvordan det gør det her. Vi kan gøre meget i det små sideløbende med, at vi udvikler nye ting på nye platforme og stille og roligt flytter. Men men vi rammer bare ind i nogle road blocks, hvor vi siger, her bliver vi nødt til at gå i samme tempo på tværs af hele organisationen, fordi Vi har så mange indbyrdes afhængigheder, at Det kan ikke lade sig gøre at flytte et system ud ad gangen.
Det vil sige, vi bliver nødt til at flytte ud og “sunsette” det gamle, og det betyder, at Der er rigtig mange, der skal der skal flytte sig i takt og gøre det samtidig og.
Ja meget lig en konvertering, og hvis vi ikke.
Får noget funding og budget til at ligesom at kunne gøre det sideløbende med de ting vi gør i forvejen, så så tror jeg ikke på, at vi lykkes. Eller vi sparker i hvert fald bare problemet ned ad vejen, og så får vi det problem senere. Jeg siger ikke vi nødvendigvis skal skal starte med det, men Vi bliver nødt til i hvert fald at være bevidst om, at det her. Det er et Det er et issue, der kommer på et på et tidspunkt, og så skal vi selvfølgelig sørge for at vi er helt aligned om, når vi nu har det her kæmpe batchflow kørsel der kører om natten. Det er jo også en kæmpe opgave at få få rodet op i det og finde ud af.
Hvad er det, Der er relevant at køre og alle de afhængigheder, Vi har bygget op er de steder, Der er relevante? Vi har haft nogle teams, som har prøvet og og lukke nogle af deres flows, fordi de kunne se det virker som om, at der ikke rigtig nogen der brugte det og den måde vi traditionelt set har kigget på at sunset nogle systemer og noget knæk kurven. Det er jo lidt at se vi kører en flow er nogen der bruger det i den anden ende, og hvis Der er det så kan vi ikke lukke flowet, men vi bliver også nødt til at sige okay og hvad bruger de det så til og dem de sender det videre til, hvad bruger de det til? Vi nødt til simpelthen have nogen der sidder og gen-analyserer og kører alle de der ting igennem og siger, kan vi overhovedet lukke. Hele det her flow. Kan vi lukke noget af det eller kan vi erstattet det med et eller andet? Altså Jeg tror Vi har et rigtig mange flows, der kører, hvor vi egentlig bare sidder og sender data rundt til hinanden, men Der er ikke nogen der tør at stoppe, fordi vi kan se at Der er 5 led mere i kæden og Det er et helt andet område, og Det er også noget ude i bankerne og så videre. Og Det har kørt de sidste 20 år, men det duer ikke at Der er nogen der ikke bruger det mere

Speaker 1   23:44
Ja.
Hvis vi går lidt tilbage?
Til hvor der bliver også snakket om alternative løsninger.
Hvad ville du sige, at ligesom nogle af de største krav som den her, en alternativ moderniseret løsning skulle leve op til?

Speaker 2   24:06
Jamen så.
Branche konform som muligt, altså det det vi Vi skal virkelig prøve at se, om vi ikke kan tage nogle standard komponenter, som er noget af det vi kender ude i verden og.
Og noget, hvor vi hvor Det er let at udvikle på, så skal det selvfølgelig opfylde det krav, Vi har som finansiel it virksomhed i forhold til oppetid i forhold til backup og i forhold til compliance. Så og og alle de der lidt lidt kedelige krav, som som Vi har, og så så er det selvfølgelig også ekstremt vigtigt, at Vi har en.
At vi ikke har nogle produkter, Der er så lige pludselig bare går ud af support, så det skal være nogle komponenter som er gennemtestet, og som vi ved at det her det. Det eksisterer nok også om 5 år og om 10 år eller i hvert fald support af det, fordi Det er også en for stor opgave. Ellers hvis vi hele tiden skal udskifte Vores komponenter.

Speaker 1   25:04
Ja.
Andet spørgsmål også hvor du sagde noget med at andre banker har tacklet lignende problem, for som i hvert fald du fik til at lyde som noget samme størrelse eller måske endda større end bankdata og har gjort det måske på kun 5 år hvor at hvad Jeg tror Jeg har hørt så er der mange der estimerer at det tager måske 20 år at komme ud af mainframe fra bankdata. Hvilke eksempler eller har du nogle eksempler på de banker der har gjort det?

Speaker 2   25:28
Ja.
Ja jeg skal lige give mig 2 sekunder så kan jeg lige finde det
Det ved jeg. De har i hvert fald flyttet rigtig meget ud af den hollandske bank ING.
Og så skal jeg lige prøve at finde her.
Ja, hvis du kigger på Capitol One I USA.
Ja ING.

Speaker 1   26:13
Ja.

Speaker 2   26:17
Det var i hvert fald lige de 2 jeg lige faldt over.
Så mener jeg også Westpack.
At de også har gjort det. 
Og så Danske Bank de har 50 mænd der i øjeblikket sidder i gang med at flytte de sidste applikationer væk fra fra mainframe.

Speaker 1   26:51
Okay.

Speaker 2   26:52
Og Nordea er også i gang med en med en lignende øvelse.
Altså en del af deres Core Banking væk fra fra mainframe og og i skygen.

Speaker 1   27:02
OK.
Ja, Vi er kommet lidt ind på det også.
Men hvad ville du måske Sådan i grove tern at have til sidst?
Sige, at det ville tilføje både hele bankdata som værdi hvis. Det var, at man ligesom kunne modernisere sig ud af og væk fra en mainframe.

Speaker 2   27:25
Jamen Jeg tror at.
At det som ja jeg ved at Der er nogen der vil sige at.
Det er ikke så meget handler om, at vi nødvendigt skal have en ny platform, så Der er måske noget mere …, så vi vi vi kan undgå at ryge en masse kattepine. Det vi også ser det. Det er, at vi bruger hele det her teknologi skifte til løftestang, Sådan for eksempel arkitekturmæssige, som netop prøver at un-bundle nogle af de her kæmpe monstersystemer (?). Vi har en monolitsystem prøv at kigge på koblinger, prøve at kigge på. Lige nu har vi jo en stor database, hvor alt data der ligger på tværs af alle banker og for den sags skyld også.
Men der vil vi jo også gerne have data ud og bo tættere på den microservice, som data egentlig tilhører og måske endda også reagere på p-niveau. Det kan også give nogle muligheder og så videre, så det vi prøver at se det som løftestang til at lave nogle principper som var lidt mere tilsvarende 2020’erne end end det vi ellers har mulighed for. For Jeg tror at lave en direkte migrering, hvor vi bare tager hele vores COBOL setup og så kører det i en eller anden container eller emulator ude i skyen. Det tænker jeg det. Det tror jeg godt man kunne, men det det hjælper os ikke.
Sådan sindssygt meget det. Det er nok ikke det, det strategi vi vil anbefale. i hvert fald.

Speaker 1   28:42
Ja.
Så har jeg ikke så meget mere. Er der nogle spørgsmål du har eller noget du tænker værdi du vil sige her til sidst.

Speaker 2   28:56
Nej, men
Har du snakket med nogle arkitekter omkring det her også?

Speaker 1   29:00
Ja.

Speaker 2   29:01
Eller skal snakke med nogen. Hvad må du snakke med?

Speaker 1   29:02
Jeg har snakket med en der var lead arkitekt.
